pipeline{
    agent { label 'master'}
    stages{
        stage("SCM-Checkout"){
            steps{
                git branch: 'feature-1', url: 'https://github.com/arvind61h/my-game.git'
            }
        }
        stage('Unit-Testing'){
            steps{
                sh 'mvn test'
            }
            post{

                success{
                    step([$class: 'JUnitResultArchiver', testResults: 'gameoflife-core/target/surefire-reports/*.xml'])

                }
            }
        }
        stage("Build-artifacts"){
            steps{
                sh 'mvn clean install'
            }
            post{
                always{
                    script{
                       def sendSlackNotifcation()
                        {
                         if ( currentBuild.currentResult == "SUCCESS" ) {
                          buildSummary = "Job: ${env.JOB_NAME}\n Status: *SUCCESS*\n Build Report: ${env.BUILD_URL}CI-Build-HTML-Report"
                          slackSend color : "good", message: "${buildSummary}", channel: '#spring-petclinic'
                         }
                         else {
                          buildSummary = "Job: ${env.JOB_NAME}\n Status: *FAILURE*\n Error description: *${CI_ERROR}* \nBuild Report :${env.BUILD_URL}CI-Build-HTML-Report"
                          slackSend color : "danger", message: "${buildSummary}", channel: '#spring-petclinic'
                         }
                        }
                    }
                }
                success{
                    archiveArtifacts artifacts: '**/*.jar, **/*.war', followSymlinks: false

                }
            }
        }
        stage('Code-Coverage-Analysis'){
            steps{
                withSonarQubeEnv('MySonarServer'){
                    sh 'mvn sonar:sonar'
                }
            }
        }
        stage('Publish Artifacs To Artifactory'){
            steps{
                rtUpload (
                    serverId: 'Artifactory1',
                    spec: '''{
                          "files": [
                            {
                              "pattern": "**/*.war",
                              "target": "libs-snapshot-local/"
                            }
                         ]
                    }''',
                )
            }
            post{
                success{
                    rtPublishBuildInfo (
                        serverId: 'Artifactory1',

                    )
                }
            }
        }
    }
}